# Generated by Django 5.1.4 on 2025-08-11 15:42

import django.core.validators
import django.db.models.deletion
import rfqs.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('goods', '0001_initial'),
        ('persons', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='ISO код валюты (USD, RUB, CNY)', max_length=3, unique=True, verbose_name='Код валюты')),
                ('name', models.CharField(max_length=50, verbose_name='Название валюты')),
                ('symbol', models.CharField(help_text='$, ₽, ¥', max_length=5, verbose_name='Символ валюты')),
                ('exchange_rate_to_rub', models.DecimalField(decimal_places=4, default=1, help_text='Текущий курс валюты к рублю', max_digits=10, verbose_name='Курс к рублю')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='RFQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ext_id', models.CharField(blank=True, help_text='Внешний идентификатор из внешней базы', max_length=100, null=True, unique=True, verbose_name='Внешний ID')),
                ('number', models.CharField(help_text='Уникальный номер запроса', max_length=50, unique=True, verbose_name='Номер RFQ')),
                ('title', models.CharField(help_text='Краткое описание запроса', max_length=200, verbose_name='Название запроса')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'Отправлен'), ('in_progress', 'В работе'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус')),
                ('priority', models.CharField(choices=[('low', 'Низкий'), ('medium', 'Средний'), ('high', 'Высокий'), ('urgent', 'Срочный')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('description', models.TextField(blank=True, help_text='Подробное описание запроса', verbose_name='Описание')),
                ('deadline', models.DateTimeField(blank=True, help_text='Крайний срок подготовки предложения', null=True, verbose_name='Крайний срок')),
                ('delivery_address', models.TextField(blank=True, help_text='Желаемый адрес доставки товаров', verbose_name='Адрес доставки')),
                ('payment_terms', models.CharField(blank=True, help_text='Предпочтительные условия оплаты', max_length=200, verbose_name='Условия оплаты')),
                ('delivery_terms', models.CharField(blank=True, help_text='Предпочтительные условия поставки', max_length=200, verbose_name='Условия поставки')),
                ('notes', models.TextField(blank=True, help_text='Внутренние заметки и комментарии', verbose_name='Заметки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfqs', to='customers.company', verbose_name='Компания-заказчик')),
                ('contact_person', models.ForeignKey(blank=True, help_text='Контактное лицо со стороны заказчика', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rfqs', to='persons.person', verbose_name='Контактное лицо')),
                ('sales_manager', models.ForeignKey(help_text='Менеджер, создавший запрос', limit_choices_to={'role': 'sales'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rfqs', to=settings.AUTH_USER_MODEL, verbose_name='Sales менеджер')),
            ],
            options={
                'verbose_name': 'Запрос цен (RFQ)',
                'verbose_name_plural': 'Запросы цен (RFQ)',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ext_id', models.CharField(blank=True, help_text='Внешний идентификатор из внешней базы', max_length=100, null=True, unique=True, verbose_name='Внешний ID')),
                ('number', models.CharField(help_text='Уникальный номер предложения', max_length=50, unique=True, verbose_name='Номер предложения')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'Отправлено'), ('accepted', 'Принято'), ('rejected', 'Отклонено'), ('expired', 'Просрочено')], default='draft', max_length=20, verbose_name='Статус')),
                ('title', models.CharField(max_length=200, verbose_name='Название предложения')),
                ('description', models.TextField(blank=True, verbose_name='Описание предложения')),
                ('valid_until', models.DateTimeField(blank=True, help_text='Дата истечения предложения', null=True, verbose_name='Действительно до')),
                ('delivery_time', models.CharField(blank=True, help_text='Предполагаемый срок поставки', max_length=200, verbose_name='Срок поставки')),
                ('payment_terms', models.CharField(blank=True, max_length=200, verbose_name='Условия оплаты')),
                ('delivery_terms', models.CharField(blank=True, max_length=200, verbose_name='Условия поставки')),
                ('notes', models.TextField(blank=True, help_text='Внутренние заметки к предложению', verbose_name='Заметки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotations', to='rfqs.currency', verbose_name='Валюта предложения')),
                ('product_manager', models.ForeignKey(help_text='Менеджер, создавший предложение', limit_choices_to={'role': 'product'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quotations', to=settings.AUTH_USER_MODEL, verbose_name='Product менеджер')),
                ('rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotations', to='rfqs.rfq', verbose_name='RFQ')),
            ],
            options={
                'verbose_name': 'Предложение',
                'verbose_name_plural': 'Предложения',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RFQItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ext_id', models.CharField(blank=True, help_text='Внешний идентификатор из внешней базы', max_length=100, null=True, unique=True, verbose_name='Внешний ID')),
                ('line_number', models.PositiveIntegerField(help_text='Порядковый номер строки в запросе', verbose_name='Номер строки')),
                ('product_name', models.CharField(blank=True, help_text='Название товара (если не из базы)', max_length=200, verbose_name='Название товара')),
                ('manufacturer', models.CharField(blank=True, help_text='Производитель товара', max_length=200, verbose_name='Производитель')),
                ('part_number', models.CharField(blank=True, help_text='Партномер или артикул товара', max_length=200, verbose_name='Артикул')),
                ('quantity', models.PositiveIntegerField(help_text='Требуемое количество', verbose_name='Количество')),
                ('unit', models.CharField(default='шт', help_text='Единица измерения (шт, кг, м и т.д.)', max_length=20, verbose_name='Единица измерения')),
                ('specifications', models.TextField(blank=True, help_text='Подробные технические требования к товару', verbose_name='Технические требования')),
                ('comments', models.TextField(blank=True, help_text='Дополнительные комментарии к строке', verbose_name='Комментарии')),
                ('is_new_product', models.BooleanField(default=False, help_text='Товар не из базы, требует создания product менеджером', verbose_name='Новый товар')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('product', models.ForeignKey(blank=True, help_text='Товар из базы (если выбран)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rfq_items', to='goods.product', verbose_name='Товар')),
                ('rfq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='rfqs.rfq', verbose_name='RFQ')),
            ],
            options={
                'verbose_name': 'Строка RFQ',
                'verbose_name_plural': 'Строки RFQ',
                'ordering': ['rfq', 'line_number'],
                'unique_together': {('rfq', 'line_number')},
            },
        ),
        migrations.CreateModel(
            name='QuotationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ext_id', models.CharField(blank=True, help_text='Внешний идентификатор из внешней базы', max_length=100, null=True, unique=True, verbose_name='Внешний ID')),
                ('proposed_product_name', models.CharField(blank=True, help_text='Название предлагаемого товара', max_length=200, verbose_name='Предлагаемое название')),
                ('proposed_manufacturer', models.CharField(blank=True, max_length=200, verbose_name='Предлагаемый производитель')),
                ('proposed_part_number', models.CharField(blank=True, max_length=200, verbose_name='Предлагаемый артикул')),
                ('quantity', models.PositiveIntegerField(help_text='Предлагаемое количество', verbose_name='Количество')),
                ('unit_cost_price', models.DecimalField(decimal_places=4, help_text='Закупочная стоимость товара за единицу', max_digits=15, verbose_name='Закупочная цена за единицу')),
                ('cost_markup_percent', models.DecimalField(decimal_places=2, default=Decimal('20.00'), help_text='Процент наценки на закупочную цену', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент наценки')),
                ('unit_price', models.DecimalField(decimal_places=4, help_text='Итоговая цена за единицу с наценкой', max_digits=15, verbose_name='Цена за единицу')),
                ('delivery_time', models.CharField(blank=True, help_text='Срок поставки для данной позиции', max_length=200, verbose_name='Срок поставки')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки к позиции')),
                ('product', models.ForeignKey(blank=True, help_text='Предлагаемый товар', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quotation_items', to='goods.product', verbose_name='Товар')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='rfqs.quotation', verbose_name='Предложение')),
                ('rfq_item', models.ForeignKey(help_text='Соответствующая строка из RFQ', on_delete=django.db.models.deletion.CASCADE, related_name='quotation_items', to='rfqs.rfqitem', verbose_name='Строка RFQ')),
            ],
            options={
                'verbose_name': 'Строка предложения',
                'verbose_name_plural': 'Строки предложения',
                'ordering': ['quotation', 'rfq_item__line_number'],
            },
        ),
        migrations.CreateModel(
            name='RFQItemFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=rfqs.models.rfq_file_upload_path, verbose_name='Файл')),
                ('file_type', models.CharField(choices=[('photo', 'Фотография'), ('datasheet', 'Даташит'), ('specification', 'Спецификация'), ('drawing', 'Чертеж'), ('other', 'Другое')], default='other', max_length=20, verbose_name='Тип файла')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Описание файла')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('rfq_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='rfqs.rfqitem', verbose_name='Строка RFQ')),
            ],
            options={
                'verbose_name': 'Файл строки RFQ',
                'verbose_name_plural': 'Файлы строк RFQ',
                'ordering': ['uploaded_at'],
            },
        ),
    ]
