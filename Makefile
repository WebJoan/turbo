SHELL := /bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
COMPOSE ?= docker compose
SERVICE ?=
APP ?=
ARGS ?=

.PHONY: help up down restart ps logs build pull clean reset \
        api-shell migrate makemigrations collectstatic superuser test \
        web-install web-dev openapi update-products index-products reindex-smart test-search test-rag \
        setup-embedder reindex-rag setup-embedder-reindex rag-test-search rag-status \
        prom-login prom-import-brands prom-import-categories prom-crawl-goods prom-crawl-category rebuild-backend \
        import-prom-from-ftp

.DEFAULT_GOAL := help

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  make up                 - –ü–æ–¥–Ω—è—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ —Ñ–æ–Ω–µ"
	@echo "  make down               - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  make restart [SERVICE=] - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å (–≤—Å–µ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å)"
	@echo "  make ps                 - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  make logs [SERVICE=]    - –õ–æ–≥–∏ (–≤—Å–µ—Ö –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞)"
	@echo "  make build [SERVICE=]   - –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤"
	@echo "  make pull [SERVICE=]    - –û–±–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–∑—ã"
	@echo "  make clean              - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –æ—Å–∏—Ä–æ—Ç–µ–≤—à–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  make reset              - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã + —Ç–æ–º–∞"
	@echo "  make migrate [ARGS=]    - Django migrate"
	@echo "  make makemigrations APP=–∏–º—è [ARGS=] - Django makemigrations"
	@echo "  make api-shell          - –û—Ç–∫—Ä—ã—Ç—å Django shell –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ api"
	@echo "  make superuser [ARGS=]  - –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
	@echo "  make collectstatic      - –°–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏–∫—É"
	@echo "  make test [ARGS=]       - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –±—ç–∫–µ–Ω–¥–∞ (pytest)"
	@echo "  make web-install        - pnpm install -r –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ"
	@echo "  make web-dev            - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ dev-—Å–µ—Ä–≤–µ—Ä"
	@echo "  make openapi            - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–∏–ø—ã OpenAPI –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ"
	@echo "  make update-products    - –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ MySQL"
	@echo "  make index-products     - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ MeiliSearch"
	@echo "  make reindex-smart      - –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
	@echo "  make test-search        - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤"
	@echo "  make test-rag QUERY=\"—Ç–µ–∫—Å—Ç\" - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å RAG —Å–∏—Å—Ç–µ–º—É –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤"
	@echo "  make setup-embedder     - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —ç–º–±–µ–¥–¥–µ—Ä –≤ Meilisearch"
	@echo "  make reindex-rag        - –ü–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–ª—è RAG"
	@echo "  make setup-embedder-reindex - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —ç–º–±–µ–¥–¥–µ—Ä –∏ –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å"
	@echo "  make rag-test-search QUERY=\"GX12M\" - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å RAG-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ manage.py"
	@echo "  make rag-status         - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Meilisearch –∏ –∏–Ω–¥–µ–∫—Å–∞"
	@echo "  make prom-login PROM_LOGIN=–ª–æ–≥–∏–Ω PROM_PASSWORD=–ø–∞—Ä–æ–ª—å - –õ–æ–≥–∏–Ω –≤ PROM (Celery)"
	@echo "  make prom-import-brands PROM_LOGIN=–ª–æ–≥–∏–Ω PROM_PASSWORD=–ø–∞—Ä–æ–ª—å - –°–ø–∞—Ä—Å–∏—Ç—å –±—Ä–µ–Ω–¥—ã —Å PROM"
	@echo "  make prom-import-categories PROM_LOGIN=–ª–æ–≥–∏–Ω PROM_PASSWORD=–ø–∞—Ä–æ–ª—å - –°–ø–∞—Ä—Å–∏—Ç—å —Ä—É–±—Ä–∏–∫–∞—Ç–æ—Ä (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏) —Å PROM"
	@echo "  make prom-crawl-goods PROM_LOGIN=–ª–æ–≥–∏–Ω PROM_PASSWORD=–ø–∞—Ä–æ–ª—å [CAT=1,2] [BRAND=10,20] [PAGES=3] - –û–±—Ö–æ–¥ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π√ó–±—Ä–µ–Ω–¥–æ–≤ –∏ –ø–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤"
	@echo "  make prom-crawl-category PROM_LOGIN=–ª–æ–≥–∏–Ω PROM_PASSWORD=–ø–∞—Ä–æ–ª—å CAT_ID=2545 [PAGES=3] - –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ PROM (–±–µ–∑ –±—Ä–µ–Ω–¥–æ–≤)"
	@echo "  make import-prom-from-ftp - –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ PROM –∏–∑ FTP (Item.csv)"
	@echo "  make rebuild-backend    - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å backend –æ–±—Ä–∞–∑—ã —Å Playwright"

# –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å docker compose
up: ## –ü–æ–¥–Ω—è—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã (–≤ —Ñ–æ–Ω–µ)
	$(COMPOSE) up --build

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	$(COMPOSE) down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å(—ã). –ü—Ä–∏–º–µ—Ä: make restart SERVICE=api
	@if [ -n "$(SERVICE)" ]; then \
		$(COMPOSE) restart $(SERVICE); \
	else \
		$(COMPOSE) restart; \
	fi

ps: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	$(COMPOSE) ps

logs: ## –ü–æ—Ç–æ–∫ –ª–æ–≥–æ–≤. –ü—Ä–∏–º–µ—Ä: make logs SERVICE=api
	@if [ -n "$(SERVICE)" ]; then \
		$(COMPOSE) logs -f $(SERVICE); \
	else \
		$(COMPOSE) logs -f; \
	fi

build: ## –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
	@if [ -n "$(SERVICE)" ]; then \
		$(COMPOSE) build $(SERVICE); \
	else \
		$(COMPOSE) build; \
	fi

pull: ## –û–±–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–∑—ã –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞
	@if [ -n "$(SERVICE)" ]; then \
		$(COMPOSE) pull $(SERVICE); \
	else \
		$(COMPOSE) pull; \
	fi

clean: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –æ—Å–∏—Ä–æ—Ç–µ–≤—à–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã/—Å–µ—Ç–∏
	$(COMPOSE) down --remove-orphans

reset: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã + —Ç–æ–º–∞
	$(COMPOSE) down -v --remove-orphans

# –ë—ç–∫–µ–Ω–¥ (Django / uv) ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ api
api-shell: ## –û—Ç–∫—Ä—ã—Ç—å Django shell
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell"

migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py migrate $(ARGS)"

makemigrations: ## –°–æ–∑–¥–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: make makemigrations APP=app_name
	@if [ -z "$(APP)" ]; then \
		echo "–£–∫–∞–∂–∏—Ç–µ APP=–∏–º—è_–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"; exit 1; \
	fi
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py makemigrations $(APP) $(ARGS)"

superuser: ## –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py createsuperuser $(ARGS)"

collectstatic: ## –°–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏–∫—É
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py collectstatic --noinput"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã (pytest)
	$(COMPOSE) exec api bash -lc "uv run -- pytest -q $(ARGS)"

# –§—Ä–æ–Ω—Ç–µ–Ω–¥ (pnpm) ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ web
web-install: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (pnpm -r)
	$(COMPOSE) exec web bash -lc "pnpm install -r"

web-dev: ## –ó–∞–ø—É—Å–∫ dev-—Å–µ—Ä–≤–µ—Ä–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	$(COMPOSE) exec web bash -lc "pnpm --filter web dev"

openapi: ## –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–≤ OpenAPI –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ
	$(COMPOSE) exec web bash -lc "pnpm run openapi:generate"

update-clients: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery-–∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ MySQL
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from customers.tasks import update_clients_from_mysql; update_clients_from_mysql.delay(); print('queued: update_clients_from_mysql')\""

update-products: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery-–∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ MySQL
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from goods.tasks import update_products_from_mysql; update_products_from_mysql.delay(); print('queued: update_products_from_mysql')\""

update-datasheets: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery-–∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—Ç–∞—à–∏—Ç–æ–≤
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from goods.tasks import download_all_datasheets; download_all_datasheets.delay(); print('queued: download_all_datasheets')\""

update-drawings: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery-–∑–∞–¥–∞—á—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä—Ç–µ–∂–µ–π
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from goods.tasks import download_all_drawings; download_all_drawings.delay(); print('queued: download_all_drawings')\""

index-products: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery-–∑–∞–¥–∞—á—É –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ MeiliSearch
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from goods.tasks import index_products_atomically; index_products_atomically.delay(); print('queued: index_products_atomically')\""

reindex-smart: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —É–ª—É—á—à–µ–Ω–Ω—É—é Celery-–∑–∞–¥–∞—á—É –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from goods.tasks import reindex_products_smart; reindex_products_smart.delay(); print('üöÄ queued: reindex_products_smart - –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!')\""

import-histprice: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery-–∑–∞–¥–∞—á—É –∏–º–ø–æ—Ä—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω –∏–∑ MySQL
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from stock.tasks import import_histprice_from_mysql; import_histprice_from_mysql.delay(); print('queued: import_histprice_from_mysql')\""

import-prom-from-ftp: ## –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ PROM –∏–∑ FTP (Item.csv)
	$(COMPOSE) exec api bash -lc "uv run -- python manage.py shell -c \"from stock.tasks import import_prom_from_ftp; import_prom_from_ftp.delay(); print('queued: import_prom_from_ftp')\""
