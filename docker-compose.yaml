services:
  db:
    image: postgres
    expose:
      - "5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    env_file:
      - .env.backend
    #environment:
    #  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #  POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 10

  api:
    command: bash -c "uv sync && uv run -- python manage.py migrate && uv run -- python manage.py runserver 0.0.0.0:8000"
    build:
      context: ./apps/backend
    expose:
      - "8000"
    volumes:
      - ./apps/backend:/app
    env_file:
      - .env.backend
    depends_on:
      db:
        condition: service_healthy

  web:
    command: bash -c "pnpm install -r && pnpm --filter web dev"
    build:
      context: ./apps/frontend
    volumes:
      - ./apps/frontend:/app
    expose:
      - "3000"
    env_file:
      - .env.frontend
    depends_on:
      - api

  proxy:
    container_name: proxy
    build:
      context: ./apps/proxy
      dockerfile: Dockerfile.ce
    restart: always
    env_file:
      - .env.proxy
    environment:
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT:-5242880}
      BUCKET_NAME: ${AWS_S3_BUCKET_NAME:-uploads}
    depends_on:
      - web
      - api
    ports:
      - "443:443"
    

